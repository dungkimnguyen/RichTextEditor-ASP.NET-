[
  {
    "Id": "74143",
    "ThreadId": "22248",
    "Html": "\r\nThe project I am working on requires the Page RequestValidation to be left on.  In order to use the RTE I had to make some modifications to the source code to escape the characters before sending it's html through the Page Request.  If anyone is interested here is what I had to do:<br /><br />In the RteStartup.js file, modified the CopyText() Function:<br /><br />  Replaced the Line:<br />  editor.value = richeditor.toHtmlString();<br /><br />  With the following Lines:<br />  var hstr = richeditor.toHtmlString();<br />  editor.value = escape(hstr);<br /><br />  This escapes the HTML characters before sending to the Page Request<br /><br />In the Rte.cs file I made the following modifications &amp; additions:<br /><br />  Added quickly written code to \"unescape\" javascript escaped characters.  There must be a better way to do this, I just haven't the time to look in to it.<br />        /// &lt;summary&gt;<br />        /// Converts a string with javascript escaped characters back to it's original state.<br />        /// &lt;/summary&gt;<br />        /// &lt;param name=\"strInput\"&gt;String containing javascript escaped characters.&lt;/param&gt;<br />        /// &lt;returns&gt;String with java escaped character returned to there real value&lt;/returns&gt;<br />        private string EntityToCharacter(string strInput)<br />        {<br /><br />            string strOutput = strInput;<br /><br />            //loop through hash table containing all characters needed to be converted.<br />            //hashtable is generated by the LoadEntityList function.<br />            foreach (System.Collections.DictionaryEntry entry in LoadEntityList())<br />            {<br />                //define string to be replaced. The javascript escaped characters appear in '%xx' format<br />                string key = \"%\" + entry.Key;<br />                //define the replacement string by casting the entry value to string.<br />                string value = (string)entry.Value;<br />                //replace the text globally throughout the string.<br />                strOutput = strOutput.Replace(key, value);<br />            }<br /><br />            //Convert carriage returns back to \\n<br />            strOutput = strOutput.Replace(\"%0D%0A\", \"\\n\");<br /><br />            //return the results.<br />            return strOutput;<br />        }<br /><br />        /// &lt;summary&gt;<br />        /// Creates a hashtable containing a hex string to character map. hex to char values were generated<br />        /// from http://en.wikibooks.org/wiki/Unicode/Character_reference/0000-0FFF<br />        /// &lt;/summary&gt;<br />        /// &lt;returns&gt;Hashtable containing hex string to character map&lt;/returns&gt;<br />        private System.Collections.Hashtable LoadEntityList()<br />        {<br />            //define hashtable<br />            System.Collections.Hashtable entityList = new System.Collections.Hashtable();<br />            //set all values.<br />            entityList.Add(\"20\", \" \");<br />            entityList.Add(\"21\", \"!\");<br />            entityList.Add(\"22\", \"\\\"\");<br />            entityList.Add(\"23\", \"#\");<br />            entityList.Add(\"24\", \"$\");<br />            entityList.Add(\"25\", \"%\");<br />            entityList.Add(\"26\", \"&amp;\");<br />            entityList.Add(\"27\", \"'\");<br />            entityList.Add(\"28\", \"(\");<br />            entityList.Add(\"29\", \")\");<br />            entityList.Add(\"2A\", \"*\");<br />            entityList.Add(\"2B\", \"+\");<br />            entityList.Add(\"2C\", \",\");<br />            entityList.Add(\"2D\", \"-\");<br />            entityList.Add(\"2E\", \".\");<br />            entityList.Add(\"2F\", \"/\");<br />            entityList.Add(\"3A\", \":\");<br />            entityList.Add(\"3B\", \";\");<br />            entityList.Add(\"3C\", \"&lt;\");<br />            entityList.Add(\"3D\", \"=\");<br />            entityList.Add(\"3E\", \"&gt;\");<br />            entityList.Add(\"3F\", \"?\");<br />            entityList.Add(\"40\", \"@\");<br />            entityList.Add(\"5B\", \"[\");<br />            entityList.Add(\"5C\", \"\\\\\");<br />            entityList.Add(\"5D\", \"]\");<br />            entityList.Add(\"5E\", \"^\");<br />            entityList.Add(\"5F\", \"_\");<br />            entityList.Add(\"60\", \"`\");<br />            entityList.Add(\"7B\", \"{\");<br />            entityList.Add(\"7C\", \"|\");<br />            entityList.Add(\"7D\", \"}\");<br />            entityList.Add(\"7E\", \"~\");<br />            entityList.Add(\"A1\", \"¡\");<br />            entityList.Add(\"A2\", \"¢\");<br />            entityList.Add(\"A3\", \"£\");<br />            entityList.Add(\"A4\", \"¤\");<br />            entityList.Add(\"A5\", \"¥\");<br />            entityList.Add(\"A6\", \"¦\");<br />            entityList.Add(\"A7\", \"§\");<br />            entityList.Add(\"A8\", \"¨\");<br />            entityList.Add(\"A9\", \"©\");<br />            entityList.Add(\"AA\", \"ª\");<br />            entityList.Add(\"AB\", \"«\");<br />            entityList.Add(\"AC\", \"¬\");<br />            entityList.Add(\"AE\", \"®\");<br />            entityList.Add(\"AF\", \"¯\");<br />            entityList.Add(\"B0\", \"°\");<br />            entityList.Add(\"B1\", \"±\");<br />            entityList.Add(\"B2\", \"²\");<br />            entityList.Add(\"B3\", \"³\");<br />            entityList.Add(\"B4\", \"´\");<br />            entityList.Add(\"B5\", \"µ\");<br />            entityList.Add(\"B6\", \"¶\");<br />            entityList.Add(\"B7\", \"·\");<br />            entityList.Add(\"B8\", \"¸\");<br />            entityList.Add(\"B9\", \"¹\");<br />            entityList.Add(\"BA\", \"º\");<br />            entityList.Add(\"BB\", \"»\");<br />            entityList.Add(\"BC\", \"¼\");<br />            entityList.Add(\"BD\", \"½\");<br />            entityList.Add(\"BE\", \"¾\");<br />            entityList.Add(\"BF\", \"¿\");<br />            entityList.Add(\"C0\", \"À\");<br />            entityList.Add(\"C1\", \"Á\");<br />            entityList.Add(\"C2\", \"Â\");<br />            entityList.Add(\"C3\", \"Ã\");<br />            entityList.Add(\"C4\", \"Ä\");<br />            entityList.Add(\"C5\", \"Å\");<br />            entityList.Add(\"C6\", \"Æ\");<br />            entityList.Add(\"C7\", \"Ç\");<br />            entityList.Add(\"C8\", \"È\");<br />            entityList.Add(\"C9\", \"É\");<br />            entityList.Add(\"CA\", \"Ê\");<br />            entityList.Add(\"CB\", \"Ë\");<br />            entityList.Add(\"CC\", \"Ì\");<br />            entityList.Add(\"CD\", \"Í\");<br />            entityList.Add(\"CE\", \"Î\");<br />            entityList.Add(\"CF\", \"Ï\");<br />            entityList.Add(\"D0\", \"Ð\");<br />            entityList.Add(\"D1\", \"Ñ\");<br />            entityList.Add(\"D2\", \"Ò\");<br />            entityList.Add(\"D3\", \"Ó\");<br />            entityList.Add(\"D4\", \"Ô\");<br />            entityList.Add(\"D5\", \"Õ\");<br />            entityList.Add(\"D6\", \"Ö\");<br />            entityList.Add(\"D7\", \"×\");<br />            entityList.Add(\"D8\", \"Ø\");<br />            entityList.Add(\"D9\", \"Ù\");<br />            entityList.Add(\"DA\", \"Ú\");<br />            entityList.Add(\"DB\", \"Û\");<br />            entityList.Add(\"DC\", \"Ü\");<br />            entityList.Add(\"DD\", \"Ý\");<br />            entityList.Add(\"DE\", \"Þ\");<br />            entityList.Add(\"DF\", \"ß\");<br />            entityList.Add(\"E0\", \"à\");<br />            entityList.Add(\"E1\", \"á\");<br />            entityList.Add(\"E2\", \"â\");<br />            entityList.Add(\"E3\", \"ã\");<br />            entityList.Add(\"E4\", \"ä\");<br />            entityList.Add(\"E5\", \"å\");<br />            entityList.Add(\"E6\", \"æ\");<br />            entityList.Add(\"E7\", \"ç\");<br />            entityList.Add(\"E8\", \"è\");<br />            entityList.Add(\"E9\", \"é\");<br />            entityList.Add(\"EA\", \"ê\");<br />            entityList.Add(\"EB\", \"ë\");<br />            entityList.Add(\"EC\", \"ì\");<br />            entityList.Add(\"ED\", \"í\");<br />            entityList.Add(\"EE\", \"î\");<br />            entityList.Add(\"EF\", \"ï\");<br />            entityList.Add(\"F0\", \"ð\");<br />            entityList.Add(\"F1\", \"ñ\");<br />            entityList.Add(\"F2\", \"ò\");<br />            entityList.Add(\"F3\", \"ó\");<br />            entityList.Add(\"F4\", \"ô\");<br />            entityList.Add(\"F5\", \"õ\");<br />            entityList.Add(\"F6\", \"ö\");<br />            entityList.Add(\"F7\", \"÷\");<br />            entityList.Add(\"F8\", \"ø\");<br />            entityList.Add(\"F9\", \"ù\");<br />            entityList.Add(\"FA\", \"ú\");<br />            entityList.Add(\"FB\", \"û\");<br />            entityList.Add(\"FC\", \"ü\");<br />            entityList.Add(\"FD\", \"ý\");<br />            entityList.Add(\"FE\", \"þ\");<br />            entityList.Add(\"FF\", \"ÿ\");<br /><br />            //return completed hashtable<br />            return entityList;<br />        }<br />    }<br /><br />  Modified the Text property get method to call the above functions:<br />    Replaced original line:<br />    return this.text;<br />    With:<br />    string strEscapedText = this.text;<br />    string strUnEscapedText = EntityToCharacter(strEscapedText);<br /><br />    return strUnEscapedText;<br /><br />  It's not pretty, but I hope it helps anyone in a similar position find a workable solution.<br />",
    "PostedDate": "2008-02-15T08:22:29.35-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]